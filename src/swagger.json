{
  "openapi": "3.0.0",
  "info": {
    "title": "Buscabelo API",
    "description": "Documentação das funcionalidades presentes no buscabelo",
    "termsOfService": "http://localhost:3000/terms",
    "contact": {
      "email": "equipebuscabelo@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://buscabelo-api.herokuapp.com/v1",
      "description": "Produção"
    },
    {
      "url": "http://localhost:3000/v1",
      "description": "Desenvolvimento"
    }
  ],
  "paths": {
    "/appointments": {
      "get": {
        "summary": "Busca lista de agendamentos cadastrados.",
        "description": "Busca lista de agendamentos cadastrados.",
        "tags": ["Appointments"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Appointments"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Cadastro de agendamento",
        "description": "Rota responsável pelo cadastro de um novo agendamento no sistema.",
        "tags": ["Appointments"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/appointments/cancel/{id}": {
      "patch": {
        "summary": "Rota para cancelar um agendamento",
        "description": "Rota para cancelar um agendamento",
        "tags": ["Appointments"],
        "security": [{"bearerAuth": []}],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Appointment ID.",
          "required": true
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "canceled_at": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "canceled_at": "2021-08-31T13:52:07.245Z"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/appointments/finish/{id}": {
      "patch": {
        "summary": "Rota para finalizar um agendamento",
        "description": "Rota para finalizar um agendamento",
        "tags": ["Appointments"],
        "security": [{"bearerAuth": []}],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Appointment ID.",
          "required": true
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time_done_at": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "time_done_at": "2021-08-31T13:52:07.245Z"
              }
            }
          }
        },
        "responses":{
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/appointments/{id}": {
      "get": {
        "summary": "Filtra um agendamento por um id específico",
        "description": "Filtra um agendamento por um id específico",
        "tags": ["Appointments"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Detalhes do Agendamento pelo Id",
          "required": true
        }],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/customers": {
      "get": {
        "summary": "Busca lista de consumidores.",
        "description": "Busca lista de consumidores.",
        "tags": ["Customers"],
        "responses":{
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Cadastro de consumidor",
        "description": "Rota responsável pelo cadastro de um novo consumidor no sistema.",
        "tags": ["Customers"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/customers/{id}/appointments": {
      "get": {
        "summary": "Busca de uma lista de agendamentos de um consumidor pelo id.",
        "description": "Busca de uma lista de agendamentos de um consumidor pelo id.",
        "tags": ["Customers"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id do consumidor.",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointments"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/customers/avatar": {
      "patch": {
        "summary": "Atualização de um avatar no consumidor",
        "description": "Rota responsável pela mudança de um avatar no consumidor.",
        "tags": ["Customers"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Image"
              },
              "example": {
                "url": "imagens/image.jpg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/providers": {
      "get": {
        "summary": "Busca lista de estabelecimentos.",
        "description": "Busca lista de estabelecimentos.",
        "tags": ["Providers"],
        "responses":{
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Providers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Cadastro de estabelecimento",
        "description": "Rota responsável pelo cadastro de um novo estabelecimento no sistema.",
        "tags": ["Providers"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/ProviderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/providers/{id}": {
      "get": {
        "summary": "Busca de um estabelecimento pelo id.",
        "description": "Busca de um estabelecimento pelo id.",
        "tags": ["Providers"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Nome do estabelecimento pelo ID.",
          "required": true
        }],
        "responses":{
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/providers/{id}/services": {
      "get": {
        "summary": "Busca de uma lista de serviceos de um estabelecimento pelo id.",
        "description": "Busca de uma lista de serviceos de um estabelecimento pelo id.",
        "tags": ["Providers"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id do estabelecimento.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Services"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/providers/{id}/appointments": {
      "get": {
        "summary": "Busca de uma lista de agendamentos de um estabelecimento pelo id.",
        "description": "Busca de uma lista de agendamentos de um estabelecimento pelo id.",
        "tags": ["Providers"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "id do estabelecimento.",
          "required": true
        }],
        "responses":{
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointments"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/providers/search": {
      "get": {
        "summary": "Busca de um estabelecimento pelo nome.",
        "description": "Busca de um estabelecimento pelo nome.",
        "tags": ["Providers"],
        "parameters": [{
          "name": "name",
          "in": "query",
          "description": "Nome do estabelecimento para busca.",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Providers"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/provider/avatar": {
      "patch": {
        "summary": "Atualização de um avatar no provider",
        "description": "Rota responsável pela mudança de um avatar no provider.",
        "tags": ["Providers"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Image"
              },
              "example": {
                "url": "imagens/image.jpg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/services": {
      "get": {
        "summary": "Busca lista de serviços de um estabelecimento autenticado.",
        "description": "Busca lista de serviços de um estabelecimento autenticado.",
        "tags": ["Services"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Services"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Cadastro de serviço",
        "description": "Rota responsável pelo cadastro de um novo serviço do estabelecimento.",
        "tags": ["Services"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/services/{id}": {
      "get": {
        "summary": "Busca de um serviço pelo id.",
        "description": "Busca de um serviço pelo id.",
        "tags": ["Services"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Nome do serviço pelo ID.",
          "required": true
        }],
        "responses":{
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Atualizar o serviço pelo id.",
        "description": "Atualizar o serviço pelo id.",
        "tags": ["Services"],
        "security": [{"bearerAuth": []}],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Atualizar o serviço pelo ID.",
          "required": true
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            }
          }
        },
        "responses":{
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "deletar o serviço pelo id.",
        "description": "deletar o serviço pelo id.",
        "tags": ["Services"],
        "security": [{"bearerAuth": []}],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "deletar o serviço pelo ID.",
          "required": true
        }],
        "responses":{
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/services/search": {
      "get": {
        "summary": "Busca de um serviço pelo nome.",
        "description": "Busca de um serviço pelo nome.",
        "tags": ["Services"],
        "parameters": [{
          "name": "name",
          "in": "query",
          "description": "Nome do serviço para busca.",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Services"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "summary": "Cadastro de sessão",
        "description": "Rota responsável pelo cadastro de uma nova sessão no sistema.",
        "tags": ["Sessions"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppointmentRequest": {
        "type": "object",
        "properties": {
          "scheduled_at": {
            "type": "string"
          },
          "appointment_to": {
            "type": "string"
          },
          "time_done_at": {
            "type": "string"
          },
          "canceled_at": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "service": {
            "type": "number"
          }
        }
      },
      "Appointments": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "appointments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "scheduled_at": {
                  "type": "string"
                },
                "appointment_to": {
                  "type": "string"
                },
                "time_done_at": {
                  "type": "string"
                },
                "canceled_at": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "customer": {
                  "type": "string"
                },
                "service": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "appointment": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "scheduled_at": {
                "type": "string"
              },
              "appointment_to": {
                "type": "string"
              },
              "time_done_at": {
                "type": "string"
              },
              "canceled_at": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "customer": {
                "type": "string"
              },
              "service": {
                "type": "number"
              }
            }
          }
        }
      },
      "Customers": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "avatar": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CustomerRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "avatar": {
                "type": "string",
                "nullable": true
              }
            }
          }
        }
      },
      "Providers": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "providers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "string",
                  "nullable": true
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "email": {
                  "type": "string"
                },
                "rating": {
                  "type": "number",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "ProviderRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Provider": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "provider": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "avatar": {
                "type": "string",
                "nullable": true
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "address": {
                "type": "string",
                "nullable": true
              },
              "rating_average": {
                "type": "number",
                "nullable": true
              }
            }
          }
        }
      },
      "Services": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "value": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "provider": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ServiceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "provider": {
            "type": "string"
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "service": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "value": {
                "type": "number"
              },
              "provider": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "SessionRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "SessionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
